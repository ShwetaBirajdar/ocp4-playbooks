---

- name: Check if cluster operators and nodes are healthy
  include_role:
    name: playbooks/roles/cluster-health-check

- name: Upgrade ocp to a stable version
  block:
     - name: Set upgrade channel
       when: upgrade_channel != ""
       shell: |
         oc patch clusterversion/version -p '{"spec":{"channel":"{{ upgrade_channel }}"}}' --type=merge

     - name: Upgrade cluster
       shell: |
         oc adm upgrade --to="{{ upgrade_version }}"

     - name: Waiting until upgrade completes
       pause:
         minutes: "{{ pause_time }}"

     - name: Check for upgrade completion
       shell: |
         oc get clusterversion -o json|jq ".items[0].status.history[0].state"
       register: state
       until: state.stdout | replace('\"', '') == "Completed"
       retries: 5
       delay: "{{ delay_time }}"
  when:
  - upgrade_version != "" and upgrade_image == ""
  - eus_upgrade_channel == "" and eus_upgrade_image == ""
  - not restricted_network_upgrade

- name: Upgrade ocp using a release image
  block:
     - name: Upgrade cluster
       shell: |
         oc adm upgrade --force --to-image="{{ upgrade_image }}" --allow-explicit-upgrade

     - name: Waiting until upgrade completes
       pause:
         minutes: "{{ pause_time }}"

     - name: Check for upgrade completion
       shell: |
         oc get clusterversion -o json|jq ".items[0].status.history[0].state"
       register: state
       until: state.stdout | replace('\"', '') == "Completed"
       retries: 5
       delay: "{{ delay_time }}"
  when: 
  - upgrade_image != ""
  - eus_upgrade_channel == "" and eus_upgrade_image == ""
  - not restricted_network_upgrade

- name: EUS to EUS upgrades 
  include_tasks: "{{ role_path }}/tasks/eus_upgrades.yaml"
  when: >
      (eus_upgrade_channel != "" or eus_upgrade_image != "") and
      ("eus" in eus_upgrade_channel or (upgrade_version != "" or upgrade_image != "" or upgrade_channel != ""))

- name: Update restricted network ocp cluster
  include_tasks: "{{ role_path }}/tasks/restricted_network_upgrade.yaml"
  when:
    - restricted_network_upgrade
    - upgrade_version != ""
    - local_registry != "" and local_repository != "" and local_secret != "" 
